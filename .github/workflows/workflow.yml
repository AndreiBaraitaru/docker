name: Build and Deploy Container App

on:
  push:
    branches:
      - main

env:
  REGISTRY_LOGIN_SERVER: andreiappregistry.azurecr.io
  IMAGE_BASE_NAME: python-flask-app
  APP_SERVICE_NAME: andreiAppService

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Login to Azure Container Registry
      - name: Login to Azure Container Registry
        run: |
          az acr login --name andreiappregistry

      # Step 4: Set image version
      - name: Set Image Version
        id: image-version
        run: echo "::set-output name=version::$(date +'%Y.%m.%d.%H.%M')"

      # Step 5: Build and push the Docker image to ACR
      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Step 6: Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 7: Deploy Docker Image to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:latest
